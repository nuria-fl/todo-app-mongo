{"version":3,"sources":["../../src/api/facets.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AAAA,KAAG,MAAH,QAAG,MAAH;AAAA,KAAW,EAAX,QAAW,EAAX;AAAA,QAAoB,wCAAS;;AAE3C;AACA,MAAK,OAHsC;;AAK3C;;;AAGA,MAR2C,gBAQtC,GARsC,EAQjC,EARiC,EAQ7B,QAR6B,EAQnB;AACvB,OAAI,QAAQ,iBAAO,IAAP,CAAa;AAAA,WAAS,MAAM,EAAN,KAAW,EAApB;AAAA,IAAb,CAAZ;AAAA,OACC,MAAM,QAAQ,IAAR,GAAe,WADtB;AAEA,YAAS,GAAT,EAAc,KAAd;AACA,GAZ0C;;;AAc3C;AACA,OAf2C,wBAezB,GAfyB,EAepB;AAAA,OAAf,MAAe,SAAf,MAAe;;AACtB,OAAI,IAAJ;AACA,GAjB0C;;;AAmB3C;AACA,QApB2C,yBAoB1B,GApB0B,EAoBrB;AAAA,OAAb,IAAa,SAAb,IAAa;;AACrB,QAAK,EAAL,GAAU,iBAAO,MAAP,CAAc,QAAd,CAAuB,EAAvB,CAAV;AACA,oBAAO,IAAP,CAAY,IAAZ;AACA,OAAI,IAAJ,CAAS,IAAT;AACA,GAxB0C;;;AA0B3C;AACA,MA3B2C,uBA2B3B,GA3B2B,EA2BtB;AAAA,OAAd,KAAc,SAAd,KAAc;;AACpB,OAAI,IAAJ,CAAS,KAAT;AACA,GA7B0C;;;AA+B3C;AACA,QAhC2C,yBAgCnB,GAhCmB,EAgCd;AAAA,OAApB,KAAoB,SAApB,KAAoB;AAAA,OAAb,IAAa,SAAb,IAAa;;AAC5B,QAAK,IAAI,GAAT,IAAgB,IAAhB,EAAsB;AACrB,QAAI,QAAM,IAAV,EAAgB;AACf,WAAM,GAAN,IAAa,KAAK,GAAL,CAAb;AACA;AACD;AACD,OAAI,UAAJ,CAAe,GAAf;AACA,GAvC0C;;;AAyC3C;AACA,QA1C2C,0BA0CzB,GA1CyB,EA0CpB;AAAA,OAAd,KAAc,SAAd,KAAc;;AACtB,oBAAO,MAAP,CAAc,iBAAO,OAAP,CAAe,KAAf,CAAd,EAAqC,CAArC;AACA,OAAI,UAAJ,CAAe,GAAf;AACA;AA7C0C,EAAT,CAApB;AAAA,C","file":"facets.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport facets from '../models/facets';\n\nexport default ({ config, db }) => resource({\n\n\t/** Property name to store preloaded entity on `request`. */\n\tid : 'facet',\n\n\t/** For requests with an `id`, you can auto-load the entity.\n\t *  Errors terminate the request, success sets `req[id] = data`.\n\t */\n\tload(req, id, callback) {\n\t\tlet facet = facets.find( facet => facet.id===id ),\n\t\t\terr = facet ? null : 'Not found';\n\t\tcallback(err, facet);\n\t},\n\n\t/** GET / - List all entities */\n\tindex({ params }, res) {\n\t\tres.json(facets);\n\t},\n\n\t/** POST / - Create a new entity */\n\tcreate({ body }, res) {\n\t\tbody.id = facets.length.toString(36);\n\t\tfacets.push(body);\n\t\tres.json(body);\n\t},\n\n\t/** GET /:id - Return a given entity */\n\tread({ facet }, res) {\n\t\tres.json(facet);\n\t},\n\n\t/** PUT /:id - Update a given entity */\n\tupdate({ facet, body }, res) {\n\t\tfor (let key in body) {\n\t\t\tif (key!=='id') {\n\t\t\t\tfacet[key] = body[key];\n\t\t\t}\n\t\t}\n\t\tres.sendStatus(204);\n\t},\n\n\t/** DELETE /:id - Delete a given entity */\n\tdelete({ facet }, res) {\n\t\tfacets.splice(facets.indexOf(facet), 1);\n\t\tres.sendStatus(204);\n\t}\n});\n"]}